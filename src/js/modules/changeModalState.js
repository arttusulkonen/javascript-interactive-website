import checkNumInputs from './checkNumInputs'const changeModalState = (state) => {  const windowForm = document.querySelectorAll('.balcon_icons_img'),        windowWidth = document.querySelectorAll('#width'),        windowHeight = document.querySelectorAll('#height'),        windowType = document.querySelectorAll('#view_type'),        windowProfile = document.querySelectorAll('.checkbox');  checkNumInputs('#width');  checkNumInputs('#height');  function bindActionToElems(e, elem, prop){    elem.forEach((item, i) => {      item.addEventListener(e, () => {        // if(elem.length > 1){        //   state[prop] = i;        //   // i равен индексу элемента, т.е выбранной формы окна. сохраняем в стейт        // } else {        //   state[prop] = item.value; // value это то значение, которое мы можем вытащить из input        // }        switch(item.nodeName){          case 'SPAN' :            state[prop] = i;            break;          case 'INPUT' :            if(item.getAttribute('type') === 'checkbox'){              i === 0 ? state[prop] = 'Холодное' : state[prop] = 'Тёплое'              /// пользователь может поставить только одну галочку              elem.forEach((box, j) => {                box.checked = false; // убирает все галочки                if(i == j){ // но если i == j, то ставит галочку                  box.checked = true;                }              })            } else {              state[prop] = item.value; //value это то значение, которое мы можем вытащить из input            }            break;          case 'SELECT' :            state[prop] = item.value; //value это то значение, которое мы можем вытащить            break;        }        console.log(state)      })    })  }  bindActionToElems('click', windowForm, 'form')  bindActionToElems('input', windowHeight, 'height')  bindActionToElems('input', windowWidth, 'width')  bindActionToElems('change', windowType, 'type')  bindActionToElems('change', windowProfile, 'profile')}export default changeModalState;