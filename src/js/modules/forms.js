import checkNumInputs from './checkNumInputs'const forms = (state) => {  // получаем все формы и инпуты  const form = document.querySelectorAll('form'),        input = document.querySelectorAll('input')  checkNumInputs('input[name="user_phone"]');  const message = {    loading: 'Загрузка...',    success: 'Спасибо! Скоро мы с вами свяжемся!',    failure: 'Что-то пошло не так...'  }  const postData = async (url, data) => {    document.querySelector('.status').textContent = message.loading;    let res = await fetch(url, {      method: 'POST',      body: data    })    return await res.text()  }  // функция по очистке инпутов  const clearInputs = () => {    input.forEach(item => {      item.value = ''    })  }  form.forEach(item => {    console.log(item)    item.addEventListener('submit', (e) => {      e.preventDefault();      let statusMessage = document.createElement('div');      statusMessage.classList.add('status')      item.appendChild(statusMessage)      // item кладём в FormData. этим методом собираем все данные из инпута и кладём в formData      const formData = new FormData(item);      // ниже проверяем, если мы дошли уже до финальной формы, то берём данные из state, затем их перебираем      if(item.getAttribute('data-calc') === 'end'){        for(let key in state){          formData.append(key, state[key]) // и отправляем их в formData        }      }      postData('assets/server.php', formData)        .then(res => {          console.log(res)          statusMessage.textContent = message.success;        })        .catch(() => statusMessage.textContent = message.failure)        .finally(() => {            clearInputs();            setTimeout(() => {              statusMessage.remove()            }, 5000)        })    })  })}export default forms;